count(book, word, sentiment, sort = TRUE) %>%
slice_head(n = 20)
books_df %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(book, word, sentiment, sort = TRUE) %>%
slice_head(n = 20) -> count_bing_sentiment
count_bing_sentiment
books_df %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(book, word, sentiment, sort = TRUE) %>%
slice_head(n = 20) -> count_bing_sentiment
count_bing_sentiment
count_bing_sentiment %>%
filter(sentiment == "positive")
books_df %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(book, word, sentiment, sort = TRUE) %>%
slice_head(n = 20) -> count_bing_sentiment
count_bing_sentiment
count_bing_sentiment %>%
filter(sentiment == "positive")[,2]
books_df %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(book, word, sentiment, sort = TRUE) %>%
slice_head(n = 20) -> count_bing_sentiment
count_bing_sentiment
count_bing_sentiment %>%
filter(sentiment == "positive")[.,2]
books_df %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(book, word, sentiment, sort = TRUE) %>%
slice_head(n = 20) -> count_bing_sentiment
count_bing_sentiment
count_bing_sentiment %>%
filter(sentiment == "positive")[2,]
books_df %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(book, word, sentiment, sort = TRUE) %>%
slice_head(n = 20) -> count_bing_sentiment
count_bing_sentiment
count_bing_sentiment %>%
filter(sentiment == "positive")
books_df %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(book, word, sentiment, sort = TRUE) %>%
slice_head(n = 20) -> count_bing_sentiment
count_bing_sentiment
count_bing_sentiment %>%
filter(sentiment == "positive") %>%
print(word)
books_df %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(book, word, sentiment, sort = TRUE) %>%
slice_head(n = 20) -> count_bing_sentiment
count_bing_sentiment
count_bing_sentiment %>%
filter(sentiment == "positive")
books_df %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(book, word, sentiment, sort = TRUE) -> count_bing_sentiment
count_bing_sentiment
# top 20 most frequent words
slice_head(count_bing_sentiment, n = 20)
count_bing_sentiment %>%
filter(sentiment == "positive")
books_df %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(book, word, sentiment, sort = TRUE) -> count_bing_sentiment
count_bing_sentiment
# top 20 most frequent words
top20 <- slice_head(count_bing_sentiment, n = 20)
top20
top20 %>%
filter(sentiment == "positive")
count_bing_sentiment
bingSentimentsJungleAndQuest %>%
group_by(book, sentiment) %>%
slice_max(order_by = n, n = 10) %>%
mutate(word = reorder_within(word, n, book)) %>%
ungroup() %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(sentiment ~ book, scales = "free_y") +
labs(y = "Contribution to sentiment", x = NULL) +
coord_flip() +
scale_x_reordered()
books_df %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(book, word, sentiment, sort = TRUE) %>%
ungroup()-> count_bing_sentiment
count_bing_sentiment
# top 20 most frequent words
top20 <- slice_head(count_bing_sentiment, n = 20)
top20
top20 %>%
filter(sentiment == "positive")
count_bing_sentiment %>%
group_by(sentiment) %>%
slice_max(order_by = n, n=10) %>%
ungroup()
bingSentimentsJungleAndQuest %>%
group_by(book, sentiment) %>%
slice_max(order_by = n, n = 10)
count_bing_sentiment %>%
group_by(book, sentiment) %>%
slice_max(order_by = n, n=10)
count_bing_sentiment %>%
group_by(book, sentiment) %>%
slice_max(order_by = n, n=10) %>%
ungroup() %>%
mutate(word = reorder(word, n))
count_bing_sentiment %>%
group_by(book, sentiment) %>%
slice_max(order_by = n, n=10) %>%
ungroup()
count_bing_sentiment %>%
group_by(book, sentiment) %>%
slice_max(order_by = n, n=10)
count_bing_sentiment %>%
group_by(book, sentiment) %>%
slice_max(order_by = n, n=10) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, scales = "free_y") +
labs(y = "Contribution to sentiment", x = NULL) +
coord_flip()
bingSentimentsJungleAndQuest %>%
group_by(book, sentiment) %>%
slice_max(order_by = n, n = 10) %>%
mutate(word = reorder_within(word, n, book)) %>%
ungroup() %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(sentiment ~ book, scales = "free_y") +
labs(y = "Contribution to sentiment", x = NULL) +
coord_flip() +
scale_x_reordered()
count_bing_sentiment %>%
group_by(book, sentiment) %>%
slice_max(order_by = n, n=10) %>%
ungroup() %>%
mutate(word = fct_reorder(parse_factor(word), n)) %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(sentiment~book, scales = "free_y") +
labs(y = "Contribution to sentiment", x = NULL) +
coord_flip()
count_bing_sentiment %>%
group_by(book, sentiment) %>%
slice_max(order_by = n, n=10) %>%
ungroup() %>%
mutate(word = fct_within(word, n, book)) %>%
ungroup() %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(sentiment~book, scales = "free") +
scale_x_reordered() +
scale_y_continuous(expand = c(0,0)) +
labs(y = "Contribution to sentiment", x = NULL) +
coord_flip()
count_bing_sentiment %>%
group_by(book, sentiment) %>%
slice_max(order_by = n, n=10) %>%
ungroup() %>%
mutate(word = reorder_within(word, n, book)) %>%
ungroup() %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(sentiment~book, scales = "free") +
scale_x_reordered() +
scale_y_continuous(expand = c(0,0)) +
labs(y = "Contribution to sentiment", x = NULL) +
coord_flip()
count_bing_sentiment %>%
group_by(book, sentiment) %>%
slice_max(order_by = n, n=10) %>%
ungroup() %>%
mutate(word = reorder_within(word, n, book)) %>%
ungroup() %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(sentiment~book, scales = "free") +
scale_x_reordered() +
labs(y = "Contribution to sentiment", x = NULL) +
coord_flip()
count_bing_sentiment %>%
group_by(book, sentiment) %>%
slice_max(order_by = n, n=10) %>%
ungroup() %>%
mutate(word = reorder_within(word, n, book)) %>%
ungroup() %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(sentiment~book, scales = "free_x") +
scale_x_reordered() +
labs(y = "Contribution to sentiment", x = NULL) +
coord_flip()
count_bing_sentiment %>%
group_by(book, sentiment) %>%
slice_max(order_by = n, n=10) %>%
ungroup() %>%
mutate(word = reorder_within(word, n, book)) %>%
ungroup() %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(sentiment~book, scales = "free_y") +
scale_x_reordered() +
labs(y = "Contribution to sentiment", x = NULL) +
coord_flip()
count_bing_sentiment
count_bing_sentiment %>%
group_by(book, sentiment)
count_bing_sentiment %>%
group_by(book, sentiment) %>%
filter(word != word)
count_bing_sentiment %>%
group_by(book, sentiment) %>%
filter(word != "miss")
count_bing_sentiment %>%
group_by(book, sentiment) %>%
filter(word != "miss") %>%
slice_max(order_by = n, n=10) %>%
ungroup() %>%
mutate(word = reorder_within(word, n, book)) %>%
ungroup() %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(sentiment~book, scales = "free_y") +
scale_x_reordered() +
labs(y = "Contribution to sentiment", x = NULL) +
coord_flip()
get_sentiments("bing") %>%
filter(word != "miss") -> bing_no_miss
# redo the analysis from the beginning
jungleAndQuest %>%
inner_join(bing_no_miss, by = "word") %>%
count(book, word, sentiment, sort = TRUE) %>%
ungroup() -> bing_word_counts
get_sentiments("bing") %>%
filter(word != "miss") -> bing_no_miss
# redo the analysis from the beginning
jungleAndQuest %>%
inner_join(bing_no_miss, by = "word") %>%
count(book, word, sentiment, sort = TRUE) %>%
ungroup() -> bing_word_counts
# remove the word “miss” from the bing sentiment lexicon.
get_sentiments("bing") %>%
filter(word != "miss") -> bing_no_miss
# redo the analysis from the beginning
jungleAndQuest %>%
inner_join(bing_no_miss, by = "word") %>%
count(book, word, sentiment, sort = TRUE) %>%
ungroup() -> bing_word_counts
# visualize it
bing_word_counts %>%
group_by(book, sentiment) %>%
slice_max(order_by = n, n = 10) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = word, y = n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(sentiment ~ book, scales = "free_y") +
labs(y = "Contribution to sentiment", x = NULL) +
coord_flip()
books_df %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(book, index = linenumber %/% 50, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
mutate(net = positive - negative) ->
book_bing_sentiment
book_bing_sentiment %>%
ggplot(aes(x= index, y = net, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x")-> plot_50
plot_50
original code in 1.5
jungleAndQuest %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(index = linenumber %/% 50, sentiment, book, sort = TRUE) %>%
pivot_wider(names_from = sentiment, values_from = n,
values_fill = list(n = 0)) %>%
mutate(net = positive - negative) %>%
ggplot(aes(x = index, y = net, fill = book)) +
geom_col(show.legend = FALSE) +
theme_bw() +
facet_wrap(~book, ncol = 2, scales = "free_x") +
ggtitle("With Miss as Negative") -> p1
# No Miss
jungleAndQuest %>%
inner_join(bing_no_miss, by = "word") %>%
count(index = linenumber %/% 50, sentiment, book, sort = TRUE) %>%
pivot_wider(names_from = sentiment, values_from = n,
values_fill = list(n = 0)) %>%
mutate(net = positive - negative) %>%
ggplot(aes(x = index, y = net, fill = book)) +
geom_col(show.legend = FALSE) +
theme_bw() +
facet_wrap(~book, ncol = 2, scales = "free_x") +
ggtitle("Without Miss as Negative")  -> p2
library(gridExtra)
doubleBing50 <- grid.arrange(p1, p2, nrow = 2)
books_df %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(book, index = linenumber %/% 50, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
mutate(net = positive - negative) ->
book_bing_sentiment
book_bing_sentiment %>%
ggplot(aes(x= index, y = net, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x")-> plot_50
plot_50
books_df %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(book, index = linenumber %/% 50, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
mutate(net = positive - negative)
books_df %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(book, index = linenumber %/% 50, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
mutate(net = positive - negative) ->
book_bing_sentiment
# plot
book_bing_sentiment %>%
ggplot(aes(x= index, y = net, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x")-> plot_50
plot_50
# new --- no miss
# data
get_sentiments("bing") %>%
filter(word != "miss") -> bing_no_miss
books_df %>%
inner_join(bing_no_miss, by = "word") %>%
count(book, index = linenumber %/% 50, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
mutate(net = positive - negative) ->
book_bing_sentiment_new
# Original from step 5
# data
books_df %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(book, index = linenumber %/% 50, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
mutate(net = positive - negative) ->
book_bing_sentiment
# plot
book_bing_sentiment %>%
ggplot(aes(x= index, y = net, fill = book)) +
geom_col(show.legend = FALSE) +
ggtitle("With Miss as Negative") +
facet_wrap(~book, ncol = 2, scales = "free_x")-> plot_50
# new --- no miss
# data
get_sentiments("bing") %>%
filter(word != "miss") -> bing_no_miss
books_df %>%
inner_join(bing_no_miss, by = "word") %>%
count(book, index = linenumber %/% 50, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
mutate(net = positive - negative) ->
book_bing_sentiment_new
# plot
book_bing_sentiment_new %>%
ggplot(aes(x= index, y = net, fill = book)) +
geom_col(show.legend = FALSE) +
ggtitle("With Miss as Negative") +
facet_wrap(~book, ncol = 2, scales = "free_x")-> plot_50_new
library(gridExtra)
grid.arrange(plot_50, plot_50_new, ncol=2)
# Original from step 5
# data
books_df %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(book, index = linenumber %/% 50, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
mutate(net = positive - negative) ->
book_bing_sentiment
# plot
book_bing_sentiment %>%
ggplot(aes(x= index, y = net, fill = book)) +
geom_col(show.legend = FALSE) +
ggtitle("With Miss as Negative") +
facet_wrap(~book, ncol = 2, scales = "free_x")-> plot_50
# new --- no miss
# data
get_sentiments("bing") %>%
filter(word != "miss") -> bing_no_miss
books_df %>%
inner_join(bing_no_miss, by = "word") %>%
count(book, index = linenumber %/% 50, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
mutate(net = positive - negative) ->
book_bing_sentiment_new
# plot
book_bing_sentiment_new %>%
ggplot(aes(x= index, y = net, fill = book)) +
geom_col(show.legend = FALSE) +
ggtitle("With Miss as Negative") +
facet_wrap(sentiment~book, ncol = 2, scales = "free_x")-> plot_50_new
library(gridExtra)
grid.arrange(plot_50, plot_50_new, ncol=2)
# Original from step 5
# data
books_df %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(book, index = linenumber %/% 50, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
mutate(net = positive - negative) ->
book_bing_sentiment
# plot
book_bing_sentiment %>%
ggplot(aes(x= index, y = net, fill = book)) +
geom_col(show.legend = FALSE) +
ggtitle("With Miss as Negative") +
facet_wrap(~book, ncol = 2, scales = "free_x")-> plot_50
# new --- no miss
# data
get_sentiments("bing") %>%
filter(word != "miss") -> bing_no_miss
books_df %>%
inner_join(bing_no_miss, by = "word") %>%
count(book, index = linenumber %/% 50, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
mutate(net = positive - negative) ->
book_bing_sentiment_new
# plot
book_bing_sentiment_new %>%
ggplot(aes(x= index, y = net, fill = book)) +
geom_col(show.legend = FALSE) +
ggtitle("With Miss as Negative") +
facet_wrap(~book, ncol = 2, scales = "free_x")-> plot_50_new
library(gridExtra)
grid.arrange(plot_50, plot_50_new, ncol=2)
# Original from step 5
# data
books_df %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(book, index = linenumber %/% 50, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
mutate(net = positive - negative) ->
book_bing_sentiment
# plot
book_bing_sentiment %>%
ggplot(aes(x= index, y = net, fill = book)) +
geom_col(show.legend = FALSE) +
ggtitle("With Miss as Negative") +
facet_wrap(~book, ncol = 2, scales = "free_x")-> plot_50
# new --- no miss
# data
get_sentiments("bing") %>%
filter(word != "miss") -> bing_no_miss
books_df %>%
inner_join(bing_no_miss, by = "word") %>%
count(book, index = linenumber %/% 50, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
mutate(net = positive - negative) ->
book_bing_sentiment_new
# plot
book_bing_sentiment_new %>%
ggplot(aes(x= index, y = net, fill = book)) +
geom_col(show.legend = FALSE) +
ggtitle("Without Miss as Negative") +
facet_wrap(~book, ncol = 2, scales = "free_x")-> plot_50_new
library(gridExtra)
grid.arrange(plot_50, plot_50_new, ncol=2)
# Original from step 5
# data
books_df %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(book, index = linenumber %/% 50, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
mutate(net = positive - negative) ->
book_bing_sentiment
# plot
book_bing_sentiment %>%
ggplot(aes(x= index, y = net, fill = book)) +
geom_col(show.legend = FALSE) +
ggtitle("With Miss as Negative") +
facet_wrap(~book, ncol = 2, scales = "free_x")-> plot_50
# new --- no miss
# data
get_sentiments("bing") %>%
filter(word != "miss") -> bing_no_miss
books_df %>%
inner_join(bing_no_miss, by = "word") %>%
count(book, index = linenumber %/% 50, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
mutate(net = positive - negative) ->
book_bing_sentiment_new
# plot
book_bing_sentiment_new %>%
ggplot(aes(x= index, y = net, fill = book)) +
geom_col(show.legend = FALSE) +
ggtitle("Without Miss as Negative") +
facet_wrap(~book, ncol = 2, scales = "free_x")-> plot_50_new
library(gridExtra)
grid.arrange(plot_50, plot_50_new, ncol=1)
setwd("D:/_Stacy/AU_Course/STAT613/fp_final-project-group-5")
library(tidyverse)
library(httr)
library(jsonlite)
library(keyring)
data_in <- GET(url = "https://data.cdc.gov/api/views/n8mc-b4w4/rows.json?accessType=DOWNLOAD", apikey = key_get("datagov_API_KEY_SECURE"))
status_code(data_in)
data_in
getwd()
# data input via API
data_in_1 <- GET(url = "https://data.cdc.gov/api/views/n8mc-b4w4/rows.json?accessType=DOWNLOAD", apikey = key_get("datagov_API_KEY_SECURE"))

# positive
books_bing_count %>%
filter(sentiment == "positive") %>%
group_by(book) %>%
slice_max(order_by = n, n = 10) %>%
ungroup() %>%
mutate(word = reorder(word, n)) %>%
ggplot(aes(x = n, y = word)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, scales = "free_y") +
labs(x = "Contribution to Book", y = NULL)
twobooks_tidy %>%
inner_join(bing_no_miss, by = "word") %>%
filter(sentiment == "positive")
# positive
books_bing_count %>%
group_by(book, sentiment) %>%
slice_max(order_by = n, n=10) %>%
ungroup() %>%
mutate(word = reorder_within(word, n, book)) %>%
ungroup() %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(sentiment ~book, scales = "free") +
scale_x_reordered() +
scale_y_continuous(expand = c(0,0)) +
labs(y = "Contribution to sentiment",
x = NULL) +
coord_flip()
get_sentiments("bing") %>%
filter(word != "miss") ->
bing_no_miss
twobooks_tidy %>%
inner_join(bing_no_miss, by = "word") %>%
group_by(book, word, sentiment) %>%
count() ->
books_bing_nomiss
books_bing_nomiss %>%
group_by(book, sentiment) %>%
slice_max(order_by = n, n=10) %>%
ungroup() %>%
mutate(word = reorder_within(word, n, book)) %>%
ungroup() %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(sentiment ~book, scales = "free") +
scale_x_reordered() +
scale_y_continuous(expand = c(0,0)) +
labs(y = "Contribution to sentiment",
x = NULL) +
coord_flip()
# filter out miss
get_sentiments("bing") %>%
filter(word != "miss") ->
bing_no_miss
# no miss df
twobooks_tidy %>%
inner_join(bing_no_miss, by = "word") %>%
group_by(book, word, sentiment) %>%
count() ->
books_bing_nomiss
books_bing_nomiss %>%
group_by(book, sentiment) %>%
slice_max(order_by = n, n=10) %>%
ungroup() %>%
mutate(word = reorder_within(word, n, book)) %>%
ungroup() %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(sentiment ~book, scales = "free") +
scale_x_reordered() +
scale_y_continuous(expand = c(0,0)) +
labs(y = "Contribution to sentiment",
x = NULL) +
coord_flip()
books_bing_count %>%
group_by(book, sentiment) %>%
slice_max(order_by = n, n = 10) %>%
ungroup() %>%
mutate(word = reorder_within(word, n, book)) %>%
ungroup() %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(sentiment ~book, scales = "free") +
scale_x_reordered() +
scale_y_continuous(expand = c(0,0)) +
labs(y = "Contribution to sentiment",
x = NULL) +
coord_flip()
# "miss" may be inappropriate for the context of the book
# filter out miss
get_sentiments("bing") %>%
filter(word != "miss") ->
bing_no_miss
# no miss df
twobooks_tidy %>%
inner_join(bing_no_miss, by = "word") %>%
group_by(book, word, sentiment) %>%
count() ->
books_bing_nomiss
books_bing_nomiss %>%
group_by(book, sentiment) %>%
slice_max(order_by = n, n = 10) %>%
ungroup() %>%
mutate(word = reorder_within(word, n, book)) %>%
ungroup() %>%
ggplot(aes(word, n, fill = sentiment)) +
geom_col(show.legend = FALSE) +
facet_wrap(sentiment ~book, scales = "free") +
scale_x_reordered() +
scale_y_continuous(expand = c(0,0)) +
labs(y = "Contribution to sentiment",
x = NULL) +
coord_flip()
# Interpretation:
# step5
twobooks_tidy %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(book, index = linenumber %/% 50, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n = 0)) %>%
mutate(net = positive - negative) %>%
ggplot(aes(index, net, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x") ->
books_bing_plot
twobooks_tidy %>%
inner_join(bing_no_miss, by = "word") %>%
count(book, index = linenumber %/% 50, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n = 0)) %>%
mutate(net = positive - negative) %>%
ggplot(aes(index, net, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x") ->
books_bing_plot
# step5
twobooks_tidy %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(book, index = linenumber %/% 50, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n = 0)) %>%
mutate(net = positive - negative) %>%
ggplot(aes(index, net, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x") ->
books_bing_plot
twobooks_tidy %>%
inner_join(bing_no_miss, by = "word") %>%
count(book, index = linenumber %/% 50, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n = 0)) %>%
mutate(net = positive - negative) %>%
ggplot(aes(index, net, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x") ->
books_bing_plot_nomiss
# step5
twobooks_tidy %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(book, index = linenumber %/% 50, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n = 0)) %>%
mutate(net = positive - negative) %>%
ggplot(aes(index, net, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x") ->
books_bing_plot
books_bing_plot
twobooks_tidy %>%
inner_join(bing_no_miss, by = "word") %>%
count(book, index = linenumber %/% 50, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n = 0)) %>%
mutate(net = positive - negative) %>%
ggplot(aes(index, net, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x") ->
books_bing_plot_nomiss
books_bing_plot_nomiss
# from step5
twobooks_tidy %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(book, index = linenumber %/% 50, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n = 0)) %>%
mutate(net = positive - negative) %>%
ggplot(aes(index, net, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x") ->
p1
twobooks_tidy %>%
inner_join(bing_no_miss, by = "word") %>%
count(book, index = linenumber %/% 50, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n = 0)) %>%
mutate(net = positive - negative) %>%
ggplot(aes(index, net, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x") ->
p2
library(gridExtra)
grid.arrange(p1, p2, nrow=2)
# from step5
twobooks_tidy %>%
inner_join(get_sentiments("bing"), by = "word") %>%
count(book, index = linenumber %/% 50, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n = 0)) %>%
mutate(net = positive - negative) %>%
ggplot(aes(index, net, fill = book)) +
ggtitle("With Miss as Negative" ) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x") ->
p1
twobooks_tidy %>%
inner_join(bing_no_miss, by = "word") %>%
count(book, index = linenumber %/% 50, sentiment) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n = 0)) %>%
mutate(net = positive - negative) %>%
ggplot(aes(index, net, fill = book)) +
ggtitle("Without Miss as Negative" ) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x") ->
p2
library(gridExtra)
grid.arrange(p1, p2, nrow=2)
# Interpretation:
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word")
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
count(book, index = linenumber %/% 500, sentiment)
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
filter(sentiment == "negative") %>%
count(book, index = linenumber %/% 500, sentiment)
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
filter(sentiment == "negative" & sentiment == "positive") %>%
count(book, index = linenumber %/% 500, sentiment)
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
filter(sentiment == "negative" | sentiment == "positive") %>%
count(book, index = linenumber %/% 500, sentiment)
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
filter(sentiment == "negative" | sentiment == "positive")
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
filter(sentiment == "negative" | sentiment == "positive") %>%
count(book, index = linenumber %/% 500, sentiment)
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
filter(sentiment == "negative" | sentiment == "positive") %>%
count(book, index = linenumber %/% 50, sentiment)
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
filter(sentiment == "negative" | sentiment == "positive") %>%
count(book, index = linenumber %/% 500, sentiment)
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
count(book, index = linenumber %/% 500, sentiment) %>%
filter(sentiment == "negative" | sentiment == "positive")
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
count(book, index = linenumber %/% 500, sentiment)
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
count(book, index = linenumber %/% 500, sentiment) %>%
filter(!(sentiment == "negative" | sentiment == "positive"))
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
count(book, index = linenumber %/% 500, sentiment) %>%
filter(!(sentiment == "negative" | sentiment == "positive")) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
mutate(net = positive - negative) %>%
ggplot(aes(index, net, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x")
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
count(book, index = linenumber %/% 500, sentiment) %>%
filter(!(sentiment == "negative" | sentiment == "positive")) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0))
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
count(book, index = linenumber %/% 500, sentiment) %>%
filter(!(sentiment == "negative" | sentiment == "positive")) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
ggplot(aes(index, net, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x")
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
count(book, index = linenumber %/% 500, sentiment) %>%
filter(!(sentiment == "negative" | sentiment == "positive"))
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
count(book, index = linenumber %/% 500, sentiment) %>%
filter(!(sentiment == "negative" | sentiment == "positive")) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
ggplot(aes(index, sentiment, fill = book)) +
geom_col(show.legend = FALSE)
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
count(book, index = linenumber %/% 500, sentiment) %>%
filter(!(sentiment == "negative" | sentiment == "positive")) %>%
# pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
ggplot(aes(index, sentiment, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x")
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
count(book, index = linenumber %/% 500, sentiment) %>%
filter(!(sentiment == "negative" | sentiment == "positive")) %>%
# pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
ggplot(aes(index, sentiment, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(sentiment~book, ncol = 2, scales = "free_x")
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
count(book, index = linenumber %/% 500, sentiment) %>%
filter(!(sentiment == "negative" | sentiment == "positive")) %>%
# pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
ggplot(aes(index, sentiment, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x")
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
count(book, index = linenumber %/% 500, sentiment) %>%
filter(!(sentiment == "negative" | sentiment == "positive"))
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
count(book, index = linenumber %/% 500, sentiment) %>%
filter(!(sentiment == "negative" | sentiment == "positive")) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0))
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
count(book, index = linenumber %/% 500, sentiment) %>%
filter(!(sentiment == "negative" | sentiment == "positive")) %>%
# pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
group_by(sentiment) %>%
count()
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
count(book, index = linenumber %/% 500, sentiment) %>%
filter(!(sentiment == "negative" | sentiment == "positive")) %>%
# pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
group_by(book, sentiment) %>%
count()
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
count(book, index = linenumber %/% 500, sentiment) %>%
filter(!(sentiment == "negative" | sentiment == "positive")) %>%
# pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
group_by(book, sentiment, index) %>%
count()
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
count(book, index = linenumber %/% 500, sentiment) %>%
filter(!(sentiment == "negative" | sentiment == "positive")) %>%
# pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
group_by(book, sentiment, index) %>%
count() %>%
ungroup() %>%
ggplot(aes(index, n, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(sentiment~book, ncol = 2, scales = "free_x")
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
count(book, index = linenumber %/% 500, sentiment) %>%
filter(!(sentiment == "negative" | sentiment == "positive"))
meta_fields
gutenberg_works() %>%
filter(str_detect(author, "Mark Twain"))
gutenberg_works() %>%
filter(str_detect(author, "Twain"))
gutenberg_works() %>%
filter(str_detect(title, "Huckleberry Finn"))
gutenberg_works() %>%
filter(str_detect(title, c("Huckleberry Finn", "Tom Sawyer")))
gutenberg_works() %>%
filter(str_detect(title, c("Huckleberry Finn", "Tom Sawyer", "Connecticut Yankee in King Arthur's Court", "Life on the Mississippi", "Prince and the Pauper", "A Tramp Abroad")))
gutenberg_works() %>%
filter(str_detect(title, c("Huckleberry Finn", "Tom Sawyer", "Connecticut Yankee in King Arthur's Court", "Life on the Mississippi", "Prince and the Pauper", "A Tramp Abroad"))) %>%
selet(gutenberg_id)
gutenberg_works() %>%
filter(str_detect(title, c("Huckleberry Finn", "Tom Sawyer", "Connecticut Yankee in King Arthur's Court", "Life on the Mississippi", "Prince and the Pauper", "A Tramp Abroad"))) %>%
select(gutenberg_id)
gutenberg_works() %>%
filter(str_detect(title, c("Huckleberry Finn", "Tom Sawyer", "Connecticut Yankee in King Arthur's Court", "Life on the Mississippi", "Prince and the Pauper", "A Tramp Abroad"))) %>%
select(gutenberg_id) %>%
as.character()
gutenberg_works() %>%
filter(str_detect(title, c("Huckleberry Finn", "Tom Sawyer", "Connecticut Yankee in King Arthur's Court", "Life on the Mississippi", "Prince and the Pauper", "A Tramp Abroad"))) %>%
select(gutenberg_id) %>%
as.character() ->
marksbook
gutenberg_download(marksbook)
gutenberg_works() %>%
filter(str_detect(title, c("Huckleberry Finn", "Tom Sawyer", "Connecticut Yankee in King Arthur's Court", "Life on the Mississippi", "Prince and the Pauper", "A Tramp Abroad"))) %>%
select(gutenberg_id)
gutenberg_works() %>%
filter(str_detect(title, c("Huckleberry Finn", "Tom Sawyer", "Connecticut Yankee in King Arthur's Court", "Life on the Mississippi", "Prince and the Pauper", "A Tramp Abroad")))
gutenberg_works() %>%
filter(str_detect(title, c("Huckleberry Finn", "Tom Sawyer", "Connecticut Yankee in King Arthur's Court", "Life on the Mississippi", "Prince and the Pauper", "A Tramp Abroad"))) ->
mtsbook
gutenberg_works() %>%
filter(str_detect(title, c("Huckleberry Finn", "Tom Sawyer", "Connecticut Yankee in King Arthur's Court", "Life on the Mississippi", "Prince and the Pauper", "A Tramp Abroad"))) ->
mtsbook
mtsid <- mtsbook$gutenberg_id
gutenberg_download(mtsid)
gutenberg_download(mtsid, meta_fields = author)
gutenberg_download(mtsid, meta_fields = "author")
mtsbooks_df <- gutenberg_download(mtsid, meta_fields = "author")
gutenberg_works() %>%
filter(str_detect(title, c("Huckleberry Finn", "Tom Sawyer", "Connecticut Yankee in King Arthur's Court", "Life on the Mississippi", "Prince and the Pauper", "A Tramp Abroad"))) ->
mtsbook
mtsid <- mtsbook$gutenberg_id # store ids
mtsbooks_df <- gutenberg_download(mtsid, meta_fields = "author") # download the books
View(mtsbooks_df)
to_tfidf <- function(x){
x %>%
mutate(linenumber = row_number(),               # add line and chapter numbers as variables
chapter = cumsum(str_detect(text,
regex("^chapter [ivxlc]",
ignore_case = TRUE)))) %>%
unnest_tokens(word, text) %>%                   # unnest tokens at the word level
mutate(word = str_extract(word, "[a-z']+")) %>% # only the words remain
filter(chapter != 0) %>%                        # remove any front matter
count(book, word, sort = TRUE) ->
y
y %>%
group_by(book) %>%
summarize(total = sum(n), .groups = "keep") ->
total_words
y %>%
left_join(total_words, by = "book") ->
y
y
}
to_tfidf(mtsbooks_df)
mtsbooks_df %>%
mutate(linenumber = row_number(),               # add line and chapter numbers as variables
chapter = cumsum(str_detect(text,
regex("^chapter [ivxlc]",
ignore_case = TRUE)))) %>%
unnest_tokens(word, text) %>%                   # unnest tokens at the word level
mutate(word = str_extract(word, "[a-z']+")) %>% # only the words remain
filter(chapter != 0) %>%                        # remove any front matter
count(word, sort = TRUE)
mtsbooks_df %>%
mutate(linenumber = row_number(),               # add line and chapter numbers as variables
chapter = cumsum(str_detect(text,
regex("^chapter [ivxlc]",
ignore_case = TRUE)))) %>%
unnest_tokens(word, text) %>%                   # unnest tokens at the word level
mutate(word = str_extract(word, "[a-z']+")) %>% # only the words remain
filter(chapter != 0) %>%                        # remove any front matter
count(title, word, sort = TRUE)
knitr::opts_chunk$set(echo = TRUE)
covid_data <- read.csv("../../DS_final_data/COVID-19_Case.csv")
covid_data <- read.csv("~/Desktop/STAT613/Data Science Project/covid_data.csv")
covid_data <- read.csv("../DS_final_data/COVID-19_Case.csv")
# Remove all rows with NA values in the race column
covid_data <- covid_data[!is.na(covid_data$race), ]
# Remove all rows containing "Missing" values in the race column
covid_data <- covid_data[-grep("Missing", covid_data$race), ]
# Remove all rows containing "Unknown" values in the race column
covid_data <- covid_data[-grep("Unknown", covid_data$race), ]
View(covid_data)
covid_data <- read.csv("../DS_final_data/COVID-19_Case.csv")
# Remove all rows with NA values in the race column
covid_data <- covid_data[!is.na(covid_data$race), ]
# Remove all rows containing "Missing" values in the race column
covid_data <- covid_data[-grep("Missing", covid_data$race), ]
# Remove all rows containing "Unknown" values in the race column
covid_data <- covid_data[-grep("Unknown", covid_data$race), ]
covid %>%
saveRDS(../Data/tidy_covid19_case.rds)
covid_data %>%
saveRDS(../Data/tidy_covid19_case.rds)
covid_data %>%
saveRDS("../Data/tidy_covid19_case.rds")
covid_data %>%
saveRDS("/Data/tidy_covid19_case.rds")
covid_data %>%
saveRDS("Data/tidy_covid19_case.rds")
View(covid_data)
covid_data %>%
select(-case_positive_specimen_interval, -case_onset_interval) ->
covid_data
View(covid_data)
covid_data %>%
select(-case_positive_specimen_interval, -case_onset_interval, -exposure_yn) ->
covid_data
covid_data %>%
select(-exposure_yn) ->
covid_data
covid_data %>%
saveRDS("Data/tidy_covid19_case.rds")
library(readr)
library(tidyverse)
library(ggplot2)
readr::readRDS("../Data/tidy_covid19_case.rds") ->
covid19_data
readRDS("../Data/tidy_covid19_case.rds") ->
covid19_data
readRDS("../Data/tidy_covid19_case.rds") ->
covid19_data
setwd("~/Documents/Stat_613_DS/DS_final_project/DS_Final_App")
shiny::runApp()
readr::read_rds("data/covid19_tidy.rds") ->
covid19_tidy
View(covid19_tidy)
covid19_tidy %>%
filter(case_month == "2020-01-01")
covid19_tidy %>%
filter(case_month == "2020-12-01")
runApp()

# pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
ggplot(aes(index, sentiment, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(~book, ncol = 2, scales = "free_x")
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
count(book, index = linenumber %/% 500, sentiment) %>%
filter(!(sentiment == "negative" | sentiment == "positive"))
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
count(book, index = linenumber %/% 500, sentiment) %>%
filter(!(sentiment == "negative" | sentiment == "positive")) %>%
pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0))
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
count(book, index = linenumber %/% 500, sentiment) %>%
filter(!(sentiment == "negative" | sentiment == "positive")) %>%
# pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
group_by(sentiment) %>%
count()
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
count(book, index = linenumber %/% 500, sentiment) %>%
filter(!(sentiment == "negative" | sentiment == "positive")) %>%
# pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
group_by(book, sentiment) %>%
count()
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
count(book, index = linenumber %/% 500, sentiment) %>%
filter(!(sentiment == "negative" | sentiment == "positive")) %>%
# pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
group_by(book, sentiment, index) %>%
count()
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
count(book, index = linenumber %/% 500, sentiment) %>%
filter(!(sentiment == "negative" | sentiment == "positive")) %>%
# pivot_wider(names_from = sentiment, values_from = n, values_fill = list(n=0)) %>%
group_by(book, sentiment, index) %>%
count() %>%
ungroup() %>%
ggplot(aes(index, n, fill = book)) +
geom_col(show.legend = FALSE) +
facet_wrap(sentiment~book, ncol = 2, scales = "free_x")
twobooks_tidy %>%
inner_join(get_sentiments("nrc"), by = "word") %>%
count(book, index = linenumber %/% 500, sentiment) %>%
filter(!(sentiment == "negative" | sentiment == "positive"))
meta_fields
gutenberg_works() %>%
filter(str_detect(author, "Mark Twain"))
gutenberg_works() %>%
filter(str_detect(author, "Twain"))
gutenberg_works() %>%
filter(str_detect(title, "Huckleberry Finn"))
gutenberg_works() %>%
filter(str_detect(title, c("Huckleberry Finn", "Tom Sawyer")))
gutenberg_works() %>%
filter(str_detect(title, c("Huckleberry Finn", "Tom Sawyer", "Connecticut Yankee in King Arthur's Court", "Life on the Mississippi", "Prince and the Pauper", "A Tramp Abroad")))
gutenberg_works() %>%
filter(str_detect(title, c("Huckleberry Finn", "Tom Sawyer", "Connecticut Yankee in King Arthur's Court", "Life on the Mississippi", "Prince and the Pauper", "A Tramp Abroad"))) %>%
selet(gutenberg_id)
gutenberg_works() %>%
filter(str_detect(title, c("Huckleberry Finn", "Tom Sawyer", "Connecticut Yankee in King Arthur's Court", "Life on the Mississippi", "Prince and the Pauper", "A Tramp Abroad"))) %>%
select(gutenberg_id)
gutenberg_works() %>%
filter(str_detect(title, c("Huckleberry Finn", "Tom Sawyer", "Connecticut Yankee in King Arthur's Court", "Life on the Mississippi", "Prince and the Pauper", "A Tramp Abroad"))) %>%
select(gutenberg_id) %>%
as.character()
gutenberg_works() %>%
filter(str_detect(title, c("Huckleberry Finn", "Tom Sawyer", "Connecticut Yankee in King Arthur's Court", "Life on the Mississippi", "Prince and the Pauper", "A Tramp Abroad"))) %>%
select(gutenberg_id) %>%
as.character() ->
marksbook
gutenberg_download(marksbook)
gutenberg_works() %>%
filter(str_detect(title, c("Huckleberry Finn", "Tom Sawyer", "Connecticut Yankee in King Arthur's Court", "Life on the Mississippi", "Prince and the Pauper", "A Tramp Abroad"))) %>%
select(gutenberg_id)
gutenberg_works() %>%
filter(str_detect(title, c("Huckleberry Finn", "Tom Sawyer", "Connecticut Yankee in King Arthur's Court", "Life on the Mississippi", "Prince and the Pauper", "A Tramp Abroad")))
gutenberg_works() %>%
filter(str_detect(title, c("Huckleberry Finn", "Tom Sawyer", "Connecticut Yankee in King Arthur's Court", "Life on the Mississippi", "Prince and the Pauper", "A Tramp Abroad"))) ->
mtsbook
gutenberg_works() %>%
filter(str_detect(title, c("Huckleberry Finn", "Tom Sawyer", "Connecticut Yankee in King Arthur's Court", "Life on the Mississippi", "Prince and the Pauper", "A Tramp Abroad"))) ->
mtsbook
mtsid <- mtsbook$gutenberg_id
gutenberg_download(mtsid)
gutenberg_download(mtsid, meta_fields = author)
gutenberg_download(mtsid, meta_fields = "author")
mtsbooks_df <- gutenberg_download(mtsid, meta_fields = "author")
gutenberg_works() %>%
filter(str_detect(title, c("Huckleberry Finn", "Tom Sawyer", "Connecticut Yankee in King Arthur's Court", "Life on the Mississippi", "Prince and the Pauper", "A Tramp Abroad"))) ->
mtsbook
mtsid <- mtsbook$gutenberg_id # store ids
mtsbooks_df <- gutenberg_download(mtsid, meta_fields = "author") # download the books
View(mtsbooks_df)
to_tfidf <- function(x){
x %>%
mutate(linenumber = row_number(),               # add line and chapter numbers as variables
chapter = cumsum(str_detect(text,
regex("^chapter [ivxlc]",
ignore_case = TRUE)))) %>%
unnest_tokens(word, text) %>%                   # unnest tokens at the word level
mutate(word = str_extract(word, "[a-z']+")) %>% # only the words remain
filter(chapter != 0) %>%                        # remove any front matter
count(book, word, sort = TRUE) ->
y
y %>%
group_by(book) %>%
summarize(total = sum(n), .groups = "keep") ->
total_words
y %>%
left_join(total_words, by = "book") ->
y
y
}
to_tfidf(mtsbooks_df)
mtsbooks_df %>%
mutate(linenumber = row_number(),               # add line and chapter numbers as variables
chapter = cumsum(str_detect(text,
regex("^chapter [ivxlc]",
ignore_case = TRUE)))) %>%
unnest_tokens(word, text) %>%                   # unnest tokens at the word level
mutate(word = str_extract(word, "[a-z']+")) %>% # only the words remain
filter(chapter != 0) %>%                        # remove any front matter
count(word, sort = TRUE)
mtsbooks_df %>%
mutate(linenumber = row_number(),               # add line and chapter numbers as variables
chapter = cumsum(str_detect(text,
regex("^chapter [ivxlc]",
ignore_case = TRUE)))) %>%
unnest_tokens(word, text) %>%                   # unnest tokens at the word level
mutate(word = str_extract(word, "[a-z']+")) %>% # only the words remain
filter(chapter != 0) %>%                        # remove any front matter
count(title, word, sort = TRUE)
knitr::opts_chunk$set(echo = TRUE)
covid_data <- read.csv("../../DS_final_data/COVID-19_Case.csv")
covid_data <- read.csv("~/Desktop/STAT613/Data Science Project/covid_data.csv")
covid_data <- read.csv("../DS_final_data/COVID-19_Case.csv")
# Remove all rows with NA values in the race column
covid_data <- covid_data[!is.na(covid_data$race), ]
# Remove all rows containing "Missing" values in the race column
covid_data <- covid_data[-grep("Missing", covid_data$race), ]
# Remove all rows containing "Unknown" values in the race column
covid_data <- covid_data[-grep("Unknown", covid_data$race), ]
View(covid_data)
covid_data <- read.csv("../DS_final_data/COVID-19_Case.csv")
# Remove all rows with NA values in the race column
covid_data <- covid_data[!is.na(covid_data$race), ]
# Remove all rows containing "Missing" values in the race column
covid_data <- covid_data[-grep("Missing", covid_data$race), ]
# Remove all rows containing "Unknown" values in the race column
covid_data <- covid_data[-grep("Unknown", covid_data$race), ]
covid %>%
saveRDS(../Data/tidy_covid19_case.rds)
covid_data %>%
saveRDS(../Data/tidy_covid19_case.rds)
covid_data %>%
saveRDS("../Data/tidy_covid19_case.rds")
covid_data %>%
saveRDS("/Data/tidy_covid19_case.rds")
covid_data %>%
saveRDS("Data/tidy_covid19_case.rds")
View(covid_data)
covid_data %>%
select(-case_positive_specimen_interval, -case_onset_interval) ->
covid_data
View(covid_data)
covid_data %>%
select(-case_positive_specimen_interval, -case_onset_interval, -exposure_yn) ->
covid_data
covid_data %>%
select(-exposure_yn) ->
covid_data
covid_data %>%
saveRDS("Data/tidy_covid19_case.rds")
library(readr)
library(tidyverse)
library(ggplot2)
readr::readRDS("../Data/tidy_covid19_case.rds") ->
covid19_data
readRDS("../Data/tidy_covid19_case.rds") ->
covid19_data
readRDS("../Data/tidy_covid19_case.rds") ->
covid19_data
getwd()
setwd("~/Documents/Stat_613_DS/DS_final_project/DS_Final_App")
library(readr)
library(ggplot2)
library(lubridate)
readr::read_rds("DS_Final_App/data/tidy_covid19_case.rds") ->
covid19
covid19 %>%
na_if("Missing") %>%
na_if("Unknown") %>%
mutate(case_month = ym(case_month)) %>%
mutate(sex = as.factor(sex),
hosp_yn = as.factor(hosp_yn),
icu_yn = as.factor(icu_yn),
death_yn = as.factor(death_yn),
underlying_conditions_yn = as.factor(underlying_conditions_yn)) ->
covid19_tidy
library(tidyverse)
covid19 %>%
na_if("Missing") %>%
na_if("Unknown") %>%
mutate(case_month = ym(case_month)) %>%
mutate(sex = as.factor(sex),
hosp_yn = as.factor(hosp_yn),
icu_yn = as.factor(icu_yn),
death_yn = as.factor(death_yn),
underlying_conditions_yn = as.factor(underlying_conditions_yn)) ->
covid19_tidy
View(covid19_tidy)
covid19_tidy %>%
group_by(case_month, res_state) %>%
mutate(total_case = n())
covid19_tidy %>%
group_by(case_month, res_state) %>%
summarise(total_case = n())
covid19_tidy %>%
group_by(case_month, res_state) %>%
summarise(total_case = cumsum())
covid19_tidy %>%
group_by(case_month, res_state) %>%
summarise(total_case = n()) %>%
ggpplot(aes(x = case_month, y = total_case, color = res_state)) +
geom_smooth(se = F)
covid19_tidy %>%
group_by(case_month, res_state) %>%
summarise(total_case = n()) %>%
ggplot(aes(x = case_month, y = total_case, color = res_state)) +
geom_smooth(se = F)
covid19_tidy %>%
group_by(case_month, res_state) %>%
summarise(total_case = n()) %>%
ggplot(aes(x = case_month, y = total_case, color = res_state)) +
geom_smooth(se = F) +
scale_y_log10()
covid19_tidy %>%
group_by(case_month, res_state) %>%
summarise(total_case = n()) %>%
ggplot(aes(x = case_month, y = total_case, color = res_state)) +
geom_smooth(se = F)
covid19_tidy %>%
group_by(case_month, res_state, race) %>%
summarise(total_case = n())
covid19_tidy %>%
group_by(case_month, race) %>%
summarise(total_case = n()) %>%
ggplot(aes(x = case_month, y = total_case, color = race)) +
geom_smooth(se = F)
shiny::runApp()
runApp()
sidebarLayout
runApp()
runApp()
covid19 %>%
na_if("Missing") %>%
na_if("Unknown") %>%
mutate(case_month = ym(case_month)) %>%
mutate(sex = as.factor(sex),
hosp_yn = as.factor(hosp_yn),
icu_yn = as.factor(icu_yn),
death_yn = as.factor(death_yn),
underlying_conditions_yn = as.factor(underlying_conditions_yn)) %>%
mutate(age_group = str_replace(age_group, "to", "-"),
age_group = str_replace(age_group, "years", ""))
covid19 %>%
na_if("Missing") %>%
na_if("Unknown") %>%
mutate(case_month = ym(case_month)) %>%
mutate(age_group = str_replace(age_group, "to", "-"),
age_group = str_replace(age_group, "years", "")) %>%
mutate(age_group = as.factor(age_group),
sex = as.factor(sex),
hosp_yn = as.factor(hosp_yn),
icu_yn = as.factor(icu_yn),
death_yn = as.factor(death_yn),
underlying_conditions_yn = as.factor(underlying_conditions_yn))  ->
covid19_tidy
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
covid19_tidy %>% str()
covid19_tidy %>%
group_by(case_month, race) %>%
summarise(total_case = n()) %>%
ggplot(aes(x = case_month, y = total_case, color = race)) +
geom_smooth(se = F)
group_by_at
covid19_tidy %>%
group_by(case_month, race) %>%
summarise(total_case = n()) %>% str()
covid19_tidy %>%
group_by(case_month, race) %>%
summarise(total_case = n())
covid19_tidy %>%
group_by(case_month, race) %>%
summarise(total_case = n(), .groups = "keep")
covid19_tidy %>%
group_by(case_month) %>%
summarise(total_case = n(), .groups = "keep")
ggplot(aes(x = case_month, y = total_case, color = race)) +
geom_smooth(se = F)
covid19_tidy %>%
group_by(case_month) %>%
summarise(total_case = n(), .groups = "keep") %>%
ggplot(aes(x = case_month, y = total_case, color = race)) +
geom_smooth(se = F)
covid19_tidy %>%
group_by(case_month, race) %>%
summarise(total_case = n(), .groups = "keep") %>%
ggplot(aes(x = case_month, y = total_case, color = race)) +
geom_smooth(se = F)
runApp()
runApp()
runApp()
View(covid19_tidy)
runApp()
runApp()
covid19_tidy %>%
count(race, res_state)
covid19_tidy %>%
count(race, res_state) %>%
reorder(res_state)
covid19_tidy %>%
count(race, res_state)
covid19_tidy %>%
count(race, res_state) %>%
filter(res_state == "CA")
covid19_tidy %>%
count(res_state)
covid19_tidy %>%
count(res_state, name = "state_case_total")
covid19_tidy %>%
count(res_state, name = "state_case_total") ->
state_case_total_df
covid19_tidy %>%
left_join(state_case_total_df)
covid19_tidy %>%
count(race, res_state) %>%
inner_join(state_case_total_df)
covid19_tidy %>%
count(res_state, name = "state_case_total") ->
state_case_total_df
covid19_tidy %>%
count(race, res_state, name = "case_by_race_state") %>%
inner_join(state_case_total_df)
covid19_tidy %>%
count(race, res_state, name = "case_by_race_state") %>%
inner_join(state_case_total_df) %>%
mutate(dist = case_by_race_state/state_case_total)
covid19_tidy %>%
count(race, res_state, name = "case_by_race_state") %>%
inner_join(state_case_total_df) %>%
mutate(dist = case_by_race_state/state_case_total) %>%
round(dist)
covid19_tidy %>%
count(race, res_state, name = "case_by_race_state") %>%
inner_join(state_case_total_df) %>%
mutate(dist = round(case_by_race_state/state_case_total))
covid19_tidy %>%
count(race, res_state, name = "case_by_race_state") %>%
inner_join(state_case_total_df) %>%
mutate(dist = round(case_by_race_state/state_case_total, digits = 3))
covid19_tidy %>%
count(race, res_state, name = "case_by_race_state") %>%
inner_join(state_case_total_df) %>%
mutate(dist = round(case_by_race_state/state_case_total, digits = 3)) %>%
filter(res_state == "CA")
covid19_tidy %>%
count(race, res_state, name = "case_by_race_state") %>%
inner_join(state_case_total_df) %>%
mutate(dist = round(case_by_race_state/state_case_total, digits = 5)) %>%
filter(res_state == "CA")
geom_col
covid19_tidy %>%
group_by(case_month, race, res_state) %>%
summarise(total_case = n(), .groups = "keep") %>%
ggplot(aes(res_state, total_case)) +
geom_col(color = race)
View(covid19_tidy)
covid19_tidy %>%
group_by(case_month, race, res_state)
covid19_tidy %>%
group_by(case_month, race, res_state) %>%
summarise(total_case = n(), .groups = "keep")
covid19_tidy %>%
group_by(case_month, race, res_state) %>%
summarise(total_case = n(), .groups = "keep") %>%
ggplot(aes(x = res_state, y = total_case)) +
geom_col(colour = race)
covid19_tidy %>%
group_by(case_month, race, res_state) %>%
summarise(total_case = n(), .groups = "keep") %>%
ggplot(aes(x = res_state, y = total_case, color = race)) +
geom_col()
covid19_tidy %>%
group_by(case_month, race, res_state) %>%
summarise(total_case = n(), .groups = "keep") %>%
ggplot(aes(x = res_state, y = total_case, fill = race)) +
geom_col()
covid19_tidy %>%
group_by(case_month, race, res_state) %>%
summarise(total_case = n(), .groups = "keep") %>%
ggplot(aes(x = res_state, y = total_case, fill = race)) +
geom_col() +
coord_flip()
covid19_tidy %>%
group_by(case_month, race, res_state) %>%
summarise(total_case = n(), .groups = "keep") %>%
ungroup() %>%
head(n, 30)
covid19_tidy %>%
group_by(case_month, race, res_state) %>%
summarise(total_case = n(), .groups = "keep") %>%
head(n, 30)
covid19_tidy %>%
group_by(case_month, race, res_state) %>%
summarise(total_case = n(), .groups = "keep") %>%
ungroup() %>%
head(total_case, 30)
covid19_tidy %>%
group_by(case_month, race, res_state) %>%
summarise(total_case = n(), .groups = "keep") %>%
head(total_case, 30)
covid19_tidy %>%
group_by(case_month, race, res_state) %>%
summarise(total_case = n(), .groups = "keep") %>%
arrange(desc(total_case))
```{r}
covid19_tidy %>%
group_by(case_month, race, res_state) %>%
summarise(total_case = n(), .groups = "keep") %>%
ggplot(aes(x = res_state, y = total_case, fill = race)) +
geom_col() +
coord_flip()
covid19_tidy %>%
group_by(case_month, race, age_group) %>%
summarise(total_case = n(), .groups = "keep") %>%
ggplot(aes(x = age_group, y = total_case, fill = race)) +
geom_col()
covid19_tidy %>%
group_by(case_month, race, sex) %>%
summarise(total_case = n(), .groups = "keep") %>%
ggplot(aes(x = sex, y = total_case, fill = race)) +
geom_col()
covid19_tidy %>%
group_by(case_month, race, age_group) %>%
summarise(total_case = n(), .groups = "keep") %>%
ggplot(aes(x = age_group, y = total_case, fill = race)) +
geom_col()
covid19_tidy %>%
drop_na() ->
covid19__nona
covid19_tidy %>%
drop_na() ->
covid19_nona
covid19_tidy %>%
group_by(case_month, race, age_group) %>%
summarise(total_case = n(), .groups = "keep") %>%
drop_na(age_group) %>%
ggplot(aes(x = age_group, y = total_case, fill = race)) +
geom_col()
covid19_tidy %>%
group_by(case_month, race, age_group) %>%
summarise(total_case = n(), .groups = "keep") %>%
drop_na(age_group) %>%
ggplot(aes(x = age_group, y = total_case, fill = race)) +
geom_col() +
scale_y_log10()
covid19_tidy %>%
group_by(case_month, race, age_group) %>%
summarise(total_case = n(), .groups = "keep") %>%
drop_na(age_group) %>%
ggplot(aes(x = age_group, y = total_case, fill = race)) +
geom_col()
covid19_tidy %>%
filter(icu_yn == "Yes")
covid19_tidy %>%
filter(icu_yn == "No")
covid19_tidy %>%
filter(death_yn == "Yes") %>%
group_by(case_month, race, age_group) %>%
summarise(total_case = n(), .groups = "keep") %>%
drop_na(age_group) %>%
ggplot(aes(x = age_group, y = total_case, fill = race)) +
geom_col()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
covid19_tidy %>%
group_by(case_month, race) %>%
summarise(total_case = n(), .groups = "keep") %>%
ggplot(aes(x = case_month, y = total_case, color = race)) +
geom_smooth(se = F)

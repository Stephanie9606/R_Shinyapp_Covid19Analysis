setwd("~/desktop/fp_final-project-group-5/ds_final_app/clickable_map")
states <- geojson_read(x = "https://raw.githubusercontent.com/PublicaMundi/MappingAPI/master/data/geojson/us-states.json",
what = "sp")
library(leaflet)
library(shiny)
library(shinydashboard)
library(sp)
library(rgdal)
library(geojsonio)
covid <- read_rds("covid19_geom.rds"")
states <- geojson_read(x = "https://raw.githubusercontent.com/PublicaMundi/MappingAPI/master/data/geojson/us-states.json",
what = "sp")
# create the UI
ui <- fluidPage(
# place the contents inside a box
shinydashboard::box(
width = 12
, title = "Click on the map!"
# separate the box by a column
, column(
width = 2
, shiny::actionButton(inputId = "clearHighlight",
icon = icon( name = "eraser"),
label = "Clear the Map",
style = "color: #fff; background-color: #D75453; border-color: #C73232")
)
covid <- read_rds("covid19_geom.rds)
states <- geojson_read(x = "https://raw.githubusercontent.com/PublicaMundi/MappingAPI/master/data/geojson/us-states.json",
what = "sp")
# create the UI
ui <- fluidPage(
# place the contents inside a box
shinydashboard::box(
width = 12
, title = "Click on the map!"
# separate the box by a column
, column(
width = 2
, shiny::actionButton(inputId = "clearHighlight",
icon = icon( name = "eraser"),
label = "Clear the Map",
style = "color: #fff; background-color: #D75453; border-color: #C73232")
)
states <- geojson_read(x = "https://raw.githubusercontent.com/PublicaMundi/MappingAPI/master/data/geojson/us-states.json",
what = "sp")
covid <- read_rds("covid19_geom.rds")
library(tidyverse)
covid <- read_rds("covid19_geom.rds")
covid_df <- merge(states, scovid, by.x = "NAME", by.y = "state")
covid_df <- merge(states, covid, by.x = "NAME", by.y = "state")
state <- as.data.frame(states)
View(state)
covid_df <- merge(states, covid, by.x = "name", by.y = "state")
View(covid)
covid_df <- merge(states, covid, by.x = "name", by.y = "State")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
